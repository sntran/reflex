// --------------------------------------------------
// reflex containers
// --------------------------------------------------

.@{reflex-prefix}container,
.@{reflex-prefix}container-full {
    box-sizing: border-box;
    width: 100%;
    margin-right: auto;
    margin-left: auto;
    padding-right: (@reflex-grid-spacing * 2);
    padding-left: (@reflex-grid-spacing * 2);

    .@{reflex-prefix}grid {
      margin-right: -(@reflex-grid-spacing);
      margin-left: -(@reflex-grid-spacing);
    }
}

.@{reflex-prefix}container {
  @media (min-width: @reflex-xs) {
    max-width: @reflex-xs;
  }

  @media (min-width: @reflex-sm) {
    max-width: @reflex-sm;
  }

  @media (min-width: @reflex-md) {
    max-width: @reflex-md;
  }

  @media (min-width: @reflex-lg) {
    max-width: @reflex-lg;
  }

  @media (min-width: @reflex-xlg) {
    max-width: @reflex-xlg;
  }
}


// --------------------------------------------------
// reflex grid
// --------------------------------------------------
.@{reflex-prefix}grid {
  box-sizing: border-box;
  display: block;
  display: flex;
  flex-wrap: wrap;
  padding: 0;
  margin: 0 auto;
  position: relative;
  .setup-whitespace();

  &::before,
  &::after {
    .reset-whitespace();
  }

  & *, & *:before, & *:after {
    box-sizing: inherit;
  }

  // handle when lists are used as a grid
  list-style-type: none;
}

// --------------------------------------------------
// reflex col defaults
// --------------------------------------------------

[class^="@{reflex-prefix}col-"] {
  .reset-whitespace();
  position: relative;
  width: 100%;
  vertical-align: top;
  padding: @reflex-grid-spacing;

  &:before,
  &:after {
    .reset-whitespace();
  }

  // handle grids nested in columns
  & .@{reflex-prefix}grid {
    flex: 1 1 auto;
    margin: -@reflex-grid-spacing;
  }

  & when (@legacy-support) {
    display: inline-block;
    *display: inline;
    zoom: 1;
  }
}
